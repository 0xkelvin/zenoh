#
# Copyright (c) 2022 ZettaScale Technology
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0, or the Apache License, Version 2.0
# which is available at https://www.apache.org/licenses/LICENSE-2.0.
#
# SPDX-License-Identifier: EPL-2.0 OR Apache-2.0
#
# Contributors:
#   ZettaScale Zenoh Team, <zenoh@zettascale.tech>
#
[package]
rust-version.workspace = true
name = "zenoh"
version.workspace = true
repository.workspace = true
homepage.workspace = true
authors.workspace = true
edition.workspace = true
license.workspace = true
categories.workspace = true
description.workspace = true
readme = "../README.md"
# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[badges]
maintenance = { status = "actively-developed" }

[features]
auth_pubkey = ["zenoh-transport/auth_pubkey"]
auth_usrpwd = ["zenoh-transport/auth_usrpwd"]
complete_n = ["zenoh-protocol/complete_n"]
shared-memory = [
    "zenoh-shm",
    "zenoh-protocol/shared-memory",
    "zenoh-transport/shared-memory",
]
stats = ["zenoh-transport/stats"]
transport_quic = ["zenoh-transport/transport_quic"]
transport_serial = ["zenoh-transport/transport_serial"]
transport_tcp = ["zenoh-transport/transport_tcp"]
transport_tls = ["zenoh-transport/transport_tls"]
transport_udp = ["zenoh-transport/transport_udp"]
transport_unixsock-stream = ["zenoh-transport/transport_unixsock-stream"]
transport_ws = ["zenoh-transport/transport_ws"]
unstable = []
default = [
    "auth_pubkey",
    "auth_usrpwd",
    "transport_quic",
    "transport_tcp",
    "transport_tls",
    "transport_udp",
    "transport_unixsock-stream",
    "transport_ws",
    "shared-memory",
]

[dependencies]
async-global-executor.workspace = true
async-std = { workspace = true, default-features = false, features = ["attributes"] }
async-trait.workspace = true
base64.workspace = true
env_logger.workspace = true
event-listener.workspace = true
flume.workspace = true
form_urlencoded.workspace = true
futures.workspace = true
git-version.workspace = true
hex.workspace = true
lazy_static.workspace = true
log.workspace = true
ordered-float.workspace = true
petgraph.workspace = true
rand.workspace = true
regex.workspace = true
serde.workspace = true
serde_json.workspace = true
socket2.workspace = true
stop-token.workspace = true
uhlc.workspace = true
uuid.workspace = true
vec_map.workspace = true
zenoh-buffers = { version = "0.7.0-rc", path = "../commons/zenoh-buffers/" }
zenoh-cfg-properties = { version = "0.7.0-rc", path = "../commons/zenoh-cfg-properties/" }
zenoh-codec = { version = "0.7.0-rc", path = "../commons/zenoh-codec/" }
zenoh-collections = { version = "0.7.0-rc", path = "../commons/zenoh-collections/" }
zenoh-config = { version = "0.7.0-rc", path = "../commons/zenoh-config/" }
zenoh-core = { version = "0.7.0-rc", path = "../commons/zenoh-core/" }
zenoh-crypto = { version = "0.7.0-rc", path = "../commons/zenoh-crypto/" }
zenoh-link = { version = "0.7.0-rc", path = "../io/zenoh-link/" }
zenoh-plugin-trait = { version = "0.7.0-rc", path = "../plugins/zenoh-plugin-trait", default-features = false }
zenoh-protocol = { version = "0.7.0-rc", path = "../commons/zenoh-protocol/" }
zenoh-shm = { version = "0.7.0-rc", path = "../commons/zenoh-shm/", optional = true }
zenoh-sync = { version = "0.7.0-rc", path = "../commons/zenoh-sync/" }
zenoh-transport = { version = "0.7.0-rc", path = "../io/zenoh-transport/" }
zenoh-util = { version = "0.7.0-rc", path = "../commons/zenoh-util" }

[build-dependencies]
rustc_version.workspace = true

[lib]
name = "zenoh"

[package.metadata.docs.rs]
features = ["unstable"]
